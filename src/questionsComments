IDEAS
=====
Don't forget: All intervals in a scale formula!

What about design by contract assertions using AspectJ?
Assert that this method always returns 0 or 1 elements!

i) Create chords by just saying "Cm7"
ii) Progressions! Roles of chords in progressions!
iii) Create notes via "C" or "D#"
iv) Augment and diminish notes!
v) Going down intervals, subtract intervals!

Computer Science
====================
HANGING
- The validation of scales, chords done with different techniques. Nothing convincing yet.

ANSWERED
- Enum type naming: Plural or singular?
- Naming of the test cases (suites vs. test case classes)
- The indentation of switch case statements


Music
==================
HANGING
- When creating a chord quality, how would you handle the unison? Should UNISON be in every chord quality
by default, or should it be specified explicitly?
- Chord has a chord quality sounds good. Does scale has a scale formula?
- Raise/Drop or Augment/Diminish?

ANSWERED
- What is the musical term for distinguishing A from A# or Ab? (accidental?) [Natural vs. Accidental]
- Which is a better approach to create scales?
i) Go relative to major scale (1,2b,3,4#,etc...)
ii) Give numbers for each note in the scale (1,3,5,6,7,9,11)
iii) Give numbers by adding (1,2,1,2,1,2) [Best Way]
iv) Go with intervals for each note (M2,Minor 3rd, P4, P5...) [The most theoric way]
- Verify: P4Raised("P4#","Raised Perfect Fourth", 2) && P5Flat("P5b","Flat Perfect Fifth", 2)
- ChordQuality + Note = Chord. Does that look good? [Yes and inversions don't create new chord qualities]
- Is there something called fourth inversion? [No. None - 1st - 2nd and 3rd]